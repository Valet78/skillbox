/*
9.7.2. Длинное вещественное число

Вы решили разработать программу-калькулятор, которая складывает числа сколько угодно большой длины. 
Для этого вы планируете работать с ними как со строками. Первая проблема, с которой вы столкнулись, 
— по данной строке нужно понять, является она корректной записью вещественного числа или нет.

Корректной считается запись, удовлетворяющая следующим условиям:
- Первым символом должна быть либо цифра, либо точка, либо знак минус. 
- После этого может идти ещё несколько цифр (возможно, ни одной). 
- Затем может идти точка, отделяющая целую часть от дробной. До точки может и не быть цифр. В таком
  случае считается, что до точки стоит 0. 
- После точки идёт ещё несколько цифр (возможно, ни одной). Хотя бы одна цифра в записи числа должна
  присутствовать. (Чтобы не усложнять задачу, в этом задании мы не будем рассматривать числа в 
  экспоненциальной записи, такие как 1.2e-3.).
Напишите программу, которая получает от пользователя строку и выводит ответ Yes, если эта строка 
корректно задаёт вещественное число, в противном случае выводит No.

Пример выполнения Корректные записи:    0123
                                        00.000
                                        .15
                                        165.
                                        999999999999999999999999999999999.999999999999999999999
                                        −1.0
                                        −.35
                  Некорректные записи:  1.2.3 (десятичная точка может быть только одна)
                                        −. (должна быть хотя бы одна цифра в записи)
                                        11e-3 (мы не разрешаем использовать символ e в записи)
                                        +25 (мы не разрешаем использовать символ + в записи)

Что оценивается
Использован строковый тип данных для считывания чисел.
Решение на примерах из условия выдаёт правильный результат.
*/

#include <iostream>

// Проверка ввода строки и пустого ввода
std::string InputTxt(std::string inTxt){
  std::string result = "";
   do{
    std::cout << inTxt;
    getline(std::cin, result);
    if (result == ""){
      std::cout << "Вы забыли ввести значение! Попробуйте снова." << std::endl;
    } 
  } while(result == ""); 
  return result;
}

// Является ли числом
bool IsDigit(std::string inTxt){  
  int sign = 0, point = 0, dig = 0;
  
  for (int i = 0; i < inTxt.length(); i++){
    if (i == 0 && inTxt[0] == '-'){
      sign++;
    } else if (inTxt[i] == '.' && point == 0){      
      point++;
    } else if (inTxt[i] >= '0' && inTxt[i] <= '9'){
      dig++;
    }  
  }     
  
  if (dig > 0 && (sign + point + dig) == inTxt.length()){
    return true;
  }  
  return false;
}

int main() {
  std::cout << "Программа проверки правильности ввода вещественного числа." << std::endl;
  std::string numTxt = InputTxt("Введите число: ");
  
  if (IsDigit(numTxt)){
    std::cout << "\"" << numTxt << "\" - Yes." << std::endl;
  } else {
    std::cout << "\"" << numTxt << "\" - No." << std::endl;
  }
  return 0;
}